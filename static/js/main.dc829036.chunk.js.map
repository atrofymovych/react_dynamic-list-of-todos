{"version":3,"sources":["TodosProvider.tsx","components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodosContext","React","createContext","prepareTodos","setFilteredToods","filteredToods","searchValue","setSearchValue","selectedTodo","title","completed","id","userId","setSelectedTodo","isTodoSelected","setIsTodoSelected","TodosProvider","children","useState","Provider","value","todosList","status","query","filter","todo","all","toLowerCase","includes","active","TodoList","useContext","className","map","cn","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoFilter","selectedOption","setSelectedOption","useEffect","loadTodos","a","todos","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","fetchData","userData","href","email","name","App","loading","setLoading","loadingTimer","clearTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc829036.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from './types/Todo';\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport enum Status {\n  'all' = 'all',\n  'active' = 'active',\n  'completed' = 'completed',\n}\n\ninterface Context {\n  prepareTodos: (\n    todosList: Todo[],\n    status: Status,\n    query?: string,\n  ) => Todo[]\n  setFilteredToods: (value: React.SetStateAction<Todo[]>) => void\n  filteredToods: Todo[]\n  searchValue: string,\n  setSearchValue: React.Dispatch<React.SetStateAction<string>>,\n  selectedTodo: Todo,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo>>,\n  isTodoSelected: boolean,\n  setIsTodoSelected: React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nexport const TodosContext = React.createContext<Context>({\n  prepareTodos: () => [],\n  setFilteredToods: () => {},\n  filteredToods: [],\n  searchValue: '',\n  setSearchValue: () => {},\n  selectedTodo: {\n    title: '',\n    completed: false,\n    id: 0,\n    userId: 0,\n  },\n  setSelectedTodo: () => {},\n  isTodoSelected: false,\n  setIsTodoSelected: () => {},\n});\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [filteredToods, setFilteredToods] = useState<Todo[]>([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo>({\n    title: '',\n    completed: false,\n    id: 0,\n    userId: 0,\n  });\n  const [isTodoSelected, setIsTodoSelected] = useState(false);\n\n  function prepareTodos(\n    todosList: Todo[],\n    status: Status,\n    query?: string,\n  ): Todo[] {\n    return todosList.filter(todo => {\n      switch (status) {\n        case Status.all:\n          if (query) {\n            return (todo.completed || !todo.completed)\n            && todo.title.toLowerCase().includes(query.toLowerCase());\n          }\n\n          return (todo.completed || !todo.completed);\n        case Status.active:\n          if (query) {\n            return (!todo.completed)\n            && todo.title.toLowerCase().includes(query.toLowerCase());\n          }\n\n          return !todo.completed;\n        case Status.completed:\n          if (query) {\n            return (todo.completed)\n            && todo.title.toLowerCase().includes(query.toLowerCase());\n          }\n\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  return (\n    <TodosContext.Provider value={{\n      prepareTodos,\n      setFilteredToods,\n      filteredToods,\n      searchValue,\n      setSearchValue,\n      selectedTodo,\n      setSelectedTodo,\n      isTodoSelected,\n      setIsTodoSelected,\n    }}\n    >\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { TodosContext } from '../../TodosProvider';\n\nexport const TodoList: React.FC = () => {\n  const {\n    filteredToods,\n    setSelectedTodo,\n    setIsTodoSelected,\n  } = useContext(TodosContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredToods.map(todo => {\n          return (\n            <tr data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\" />\n              <td className=\"is-vcentered is-expanded\">\n                <p className={\n                  cn({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })\n                }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTodo(todo);\n                    setIsTodoSelected(true);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TodosContext, Status } from '../../TodosProvider';\nimport { getTodos } from '../../api';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    prepareTodos,\n    setFilteredToods,\n    searchValue,\n    setSearchValue,\n  } = useContext(TodosContext);\n  const [selectedOption, setSelectedOption] = useState(Status.all);\n  const handleOptionChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectedOption(event.target.value as Status);\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const todos = await getTodos();\n\n      setFilteredToods(prepareTodos(todos, selectedOption, searchValue));\n    };\n\n    loadTodos();\n  }, [selectedOption, prepareTodos, setFilteredToods, searchValue]);\n\n  const handleSearchValueChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleOptionChange}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={handleSearchValueChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSearchValue('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { TodosContext } from '../../TodosProvider';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    selectedTodo,\n    setSelectedTodo,\n    setIsTodoSelected,\n  } = useContext(TodosContext);\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const userData = await getUser(selectedTodo.userId);\n\n      setUser(userData);\n    };\n\n    if (selectedTodo) {\n      fetchData();\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${selectedTodo?.id}`}\n          </div>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => {\n              setSelectedTodo({\n                title: '',\n                completed: false,\n                id: 0,\n                userId: 0,\n              });\n              setIsTodoSelected(false);\n            }}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {selectedTodo?.title}\n          </p>\n          <p className=\"block\" data-cy=\"modal-user\">\n            {selectedTodo?.completed ? (\n              <strong className=\"has-text-success\">Done</strong>\n            ) : (\n              <strong className=\"has-text-danger\">Planned</strong>\n            )}\n            {' by '}\n            <a href={`mailto:${user?.email}`}>\n              {user?.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './TodosProvider';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const { isTodoSelected } = useContext(TodosContext);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadingTimer = setTimeout(() => {\n      setLoading(false);\n    }, 200);\n\n    return () => {\n      clearTimeout(loadingTimer);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : <TodoList />}\n            </div>\n            {isTodoSelected && <TodoModal />}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './TodosProvider';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}