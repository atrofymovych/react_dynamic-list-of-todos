{"version":3,"sources":["TodosProvider.tsx","components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodosContext","React","createContext","prepareTodos","setFilteredToods","filteredToods","searchValue","setSearchValue","selectedTodo","setSelectedTodo","TodosProvider","children","useState","Provider","value","todosList","status","query","filter","todo","all","completed","title","toLowerCase","includes","active","TodoList","useContext","className","map","id","cn","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoFilter","selectedOption","setSelectedOption","useEffect","todosFromServer","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","isLoading","setIsLoading","userId","userData","finally","href","email","name","App","loading","setLoading","loadingTimer","clearTimeout","ReactDOM","render","document","getElementById"],"mappings":"iLAOYA,E,sFAAAA,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KAoBL,IAAMC,EAAeC,IAAMC,cAAuB,CACvDC,aAAc,iBAAM,IACpBC,iBAAkB,aAClBC,cAAe,GACfC,YAAa,GACbC,eAAgB,aAChBC,aAAc,KACdC,gBAAiB,eAGNC,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/C,EAA0CC,mBAAiB,IAA3D,mBAAOP,EAAP,KAAsBD,EAAtB,KACA,EAAsCQ,mBAAS,IAA/C,mBAAON,EAAP,KAAoBC,EAApB,KACA,EAAwCK,mBAAsB,MAA9D,mBAAOJ,EAAP,KAAqBC,EAArB,KAoCA,OACE,cAACT,EAAaa,SAAd,CAAuBC,MAAO,CAC5BX,aApCJ,SACEY,EACAC,EACAC,GAEA,OAAOF,EAAUG,QAAO,SAAAC,GACtB,OAAQH,GACN,KAAKjB,EAAOqB,IACV,OAAIH,GACME,EAAKE,YAAcF,EAAKE,YAC7BF,EAAKG,MAAMC,cAAcC,SAASP,EAAMM,eAGrCJ,EAAKE,YAAcF,EAAKE,UAClC,KAAKtB,EAAO0B,OACV,OAAIR,GACOE,EAAKE,WACXF,EAAKG,MAAMC,cAAcC,SAASP,EAAMM,gBAGrCJ,EAAKE,UACf,KAAKtB,EAAOsB,UACV,OAAIJ,EACME,EAAKE,WACVF,EAAKG,MAAMC,cAAcC,SAASP,EAAMM,eAGtCJ,EAAKE,UACd,QACE,OAAO,OAQXjB,mBACAC,gBACAC,cACAC,iBACAC,eACAC,mBAPF,SAUGE,KCnFMe,EAAqB,WAChC,MAIIC,qBAAW3B,GAHbK,EADF,EACEA,cACAG,EAFF,EAEEA,aACAC,EAHF,EAGEA,gBAGF,OACE,wBAAOmB,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGvB,EAAcwB,KAAI,SAAAV,GACjB,OACE,qBACE,UAAQ,OACRS,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BT,EAAKW,KACnC,oBAAIF,UAAU,eAAd,SACGT,EAAKE,WACJ,sBAAMO,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UACDG,IAAG,CACD,mBAAoBZ,EAAKE,UACzB,mBAAoBF,EAAKE,YAH7B,SAOGF,EAAKG,UAGV,oBAAIM,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVI,KAAK,SACLC,QAAS,WACPxB,EAAgBU,IALpB,SAQE,sBAAMS,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAG,MACf,CACE,UAAsB,OAAZvB,QAAY,IAAZA,OAAA,EAAAA,EAAcsB,MAAOX,EAAKW,GACpC,gBAA4B,OAAZtB,QAAY,IAAZA,OAAA,EAAAA,EAAcsB,MAAOX,EAAKW,eAlC/CX,EAAKW,aClBxB,SAASI,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICpBMC,EAAuB,WAClC,MAKIlB,qBAAW3B,GAJbG,EADF,EACEA,aACAC,EAFF,EAEEA,iBACAE,EAHF,EAGEA,YACAC,EAJF,EAIEA,eAEF,EAA4CK,mBAASb,EAAOqB,KAA5D,mBAAO0B,EAAP,KAAuBC,EAAvB,KAOAC,qBAAU,WDMkBd,EAAY,UCJnCO,MAAK,SAACQ,GACL7C,EAAiBD,EACf8C,EACAH,EACAxC,SAGL,CAACwC,EAAgB3C,EAAcG,EAAaF,IAY/C,OACE,uBAAMwB,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRsB,SAjCiB,SACzBC,GAEAJ,EAAkBI,EAAMC,OAAOtC,QA4BzB,UAIE,wBACEA,MAAM,MADR,iBAKA,wBACEA,MAAM,SADR,oBAKA,wBACEA,MAAM,YADR,8BASN,oBAAGc,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRI,KAAK,OACLJ,UAAU,QACVyB,YAAY,YACZvC,MAAOR,EACP4C,SA5CwB,SAC9BC,GAEA5C,EAAe4C,EAAMC,OAAOtC,UA2CxB,sBAAMc,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgB0B,MAAO,CAAEC,cAAe,OAAxD,SACGjD,GACC,mCAEE,wBACE,UAAQ,oBACR0B,KAAK,SACLJ,UAAU,SACVK,QApDM,WAClB1B,EAAe,kBCjCNiD,G,MAAmB,kBAC9B,qBAAK5B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCCN6B,EAAsB,WACjC,MAGI9B,qBAAW3B,GAFbQ,EADF,EACEA,aACAC,EAFF,EAEEA,gBAGF,EAAwBG,mBAAsB,MAA9C,mBAAO8C,EAAP,KAAaC,EAAb,KAEA,EAAkC/C,oBAAS,GAA3C,mBAAOgD,EAAP,KAAkBC,EAAlB,KAEAb,qBAAU,WHUW,IAACc,EGTpBD,GAAa,GACTrD,IHQgBsD,EGPVtD,EAAasD,OHOgB5B,EAAG,iBAAiB4B,KGNtDrB,MAAK,SAACsB,GACLJ,EAAQI,MAETC,SAAQ,WACPH,GAAa,QAGlB,CAACrD,IAMJ,OACE,sBAAKoB,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdgC,EACC,cAAC,EAAD,IAEA,sBAAKhC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIYpB,QAJZ,IAIYA,OAJZ,EAIYA,EAAcsB,MAG1B,wBACEE,KAAK,SACLJ,UAAU,SACV,UAAQ,cACRK,QAxBc,WACxBxB,EAAgB,YA2BV,sBAAKmB,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGpB,QADH,IACGA,OADH,EACGA,EAAcc,QAEjB,oBAAGM,UAAU,QAAQ,UAAQ,aAA7B,UACe,OAAZpB,QAAY,IAAZA,KAAca,UACb,wBAAQO,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAED,OACD,mBAAGqC,KAAI,wBAAYP,QAAZ,IAAYA,OAAZ,EAAYA,EAAMQ,OAAzB,gBACGR,QADH,IACGA,OADH,EACGA,EAAMS,oBC1DVC,EAAgB,WAC3B,IAAQ5D,EAAiBmB,qBAAW3B,GAA5BQ,aAER,EAA8BI,oBAAS,GAAvC,mBAAOyD,EAAP,KAAgBC,EAAhB,KAYA,OAVAtB,qBAAU,WACR,IAAMuB,EAAe/B,YAAW,WAC9B8B,GAAW,KACV,KAEH,OAAO,WACLE,aAAaD,MAEd,IAGD,mCACE,qBAAK3C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBACA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACGyC,EAAU,cAAC,EAAD,IAAa,cAAC,EAAD,MAEzB7D,GAAgB,cAAC,EAAD,cCnC7BiE,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.983b098f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from './types/Todo';\n\ntype Props = {\n  children: React.ReactNode,\n};\n\nexport enum Status {\n  'all' = 'all',\n  'active' = 'active',\n  'completed' = 'completed',\n}\n\ninterface Context {\n  prepareTodos: (\n    todosList: Todo[],\n    status: Status,\n    query?: string,\n  ) => Todo[]\n  setFilteredToods: (value: React.SetStateAction<Todo[]>) => void\n  filteredToods: Todo[]\n  searchValue: string,\n  setSearchValue: React.Dispatch<React.SetStateAction<string>>,\n  selectedTodo: Todo | null,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n}\n\nexport const TodosContext = React.createContext<Context>({\n  prepareTodos: () => [],\n  setFilteredToods: () => {},\n  filteredToods: [],\n  searchValue: '',\n  setSearchValue: () => {},\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n});\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [filteredToods, setFilteredToods] = useState<Todo[]>([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  function prepareTodos(\n    todosList: Todo[],\n    status: Status,\n    query?: string,\n  ): Todo[] {\n    return todosList.filter(todo => {\n      switch (status) {\n        case Status.all:\n          if (query) {\n            return (todo.completed || !todo.completed)\n            && todo.title.toLowerCase().includes(query.toLowerCase());\n          }\n\n          return (todo.completed || !todo.completed);\n        case Status.active:\n          if (query) {\n            return (!todo.completed)\n            && todo.title.toLowerCase().includes(query.toLowerCase());\n          }\n\n          return !todo.completed;\n        case Status.completed:\n          if (query) {\n            return (todo.completed)\n            && todo.title.toLowerCase().includes(query.toLowerCase());\n          }\n\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  return (\n    <TodosContext.Provider value={{\n      prepareTodos,\n      setFilteredToods,\n      filteredToods,\n      searchValue,\n      setSearchValue,\n      selectedTodo,\n      setSelectedTodo,\n    }}\n    >\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { TodosContext } from '../../TodosProvider';\n\nexport const TodoList: React.FC = () => {\n  const {\n    filteredToods,\n    selectedTodo,\n    setSelectedTodo,\n  } = useContext(TodosContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredToods.map(todo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={\n                  cn({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })\n                }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far',\n                      {\n                        'fa-eye': selectedTodo?.id !== todo.id,\n                        'fa-eye-slash': selectedTodo?.id === todo.id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TodosContext, Status } from '../../TodosProvider';\nimport { getTodos } from '../../api';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    prepareTodos,\n    setFilteredToods,\n    searchValue,\n    setSearchValue,\n  } = useContext(TodosContext);\n  const [selectedOption, setSelectedOption] = useState(Status.all);\n  const handleOptionChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectedOption(event.target.value as Status);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => {\n        setFilteredToods(prepareTodos(\n          todosFromServer,\n          selectedOption,\n          searchValue,\n        ));\n      });\n  }, [selectedOption, prepareTodos, searchValue, setFilteredToods]);\n\n  const handleSearchValueChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setSearchValue(event.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchValue('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleOptionChange}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={handleSearchValueChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchValue && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={clearSearch}\n              />\n            </>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { TodosContext } from '../../TodosProvider';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    selectedTodo,\n    setSelectedTodo,\n  } = useContext(TodosContext);\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then((userData) => {\n          setUser(userData);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [selectedTodo]);\n\n  const clearSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={clearSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodosContext } from './TodosProvider';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const { selectedTodo } = useContext(TodosContext);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadingTimer = setTimeout(() => {\n      setLoading(false);\n    }, 200);\n\n    return () => {\n      clearTimeout(loadingTimer);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : <TodoList />}\n            </div>\n            {selectedTodo && <TodoModal />}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './TodosProvider';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}